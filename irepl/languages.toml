[python]
prompt     = '>>> '
continuation = '\.\.\.\s+'
lexer      = "python"
executable = "python3"
flags      = ['-q']
multiline  = []
  [python.files]
  history = ".python_history"
  init    = ""

[lua]
prompt     = '> '
continuation = '>>\s+'
lexer      = "lua"
executable = "lua"
flags      = []
multiline  = []
  [lua.files]
  history = ".lua_history"
  init    = ""

[chicken]
prompt     = '#;\d+> '
continuation = ''
lexer      = "scheme"
executable = "chicken-csi"
flags      = []
multiline  = []
  [chicken.files]
  history = ".chicken-csi_history"
  init    = ""

[ruby]
prompt     = 'irb\\(main\\):(\d+):\d+> '
continuation = ''
lexer      = "ruby"
executable = "irb"
flags      = []
multiline  = []
  [ruby.files]
  history = ".irb_history"
  init    = ""

[factor]
prompt     = 'IN: (\w+) '
continuation = ''
lexer      = "factor"
executable = "factor-vm"
flags      = ['-run=readline-listener']
multiline  = []
  [factor.files]
  history = ".factor_history"
  init    = ""

[haskell]
prompt     = '([^>]+\s?)+> '
continuation = 'Prelude\|\s+'
lexer      = "haskell"
executable = "ghci"
flags      = []
multiline  = [ ':{', ':}' ]
  [haskell.files]
  history = "~/.haskell_history"
  init    = "~/.ghci"

[javascript]
prompt     = '> '
continuation = ''
lexer      = "javascript"
executable = "node"
flags      = []
multiline  = []
  [javascript.fies]
  history = "~/.node_repl_history"
  init    = ""
